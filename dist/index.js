!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.wow_validator=e():t.wow_validator=e()}(this,(()=>{return t={568:(t,e,o)=>{const{numValid:r,digitCheck:i}=o(397),n=new(o(660))({validators:r,group:"num"}).addRule("num","twoDigitFloatCheck",i({min:2,max:2,isInteger:!1})).mounter;t.exports=n},397:(t,e)=>{e.digitCheck=function({min:t,max:e,isInteger:o}={isInteger:!0}){let r;t&&e&&(r=`${t},${e}`),t&&!e&&(r=`${t},`),e&&!t&&(r=`,${e}`);const i=r?`{${r}}`:"+";return new RegExp(o?`^\\d${i}$`:`^\\d+\\.\\d${i}$`)},e.numValid={isFloat:/^\d+\.\d+$/,isInteger:/^(\d+)$/,isZeroStart:/^0(\d*)$/,isNotZeroStart:/^[1-9]+$/}},660:t=>{const e={}.hasOwnProperty;t.exports=class{mounter={};constructor({validators:t,mounter:e,group:o}){e&&(this.mounter=e),this.validators=t,this.group=o,this.init()}init(){const{mounter:t,group:o}=this;e.call(t,o)||(this.mounter[o]={}),this.mountRegExp()}mountRegExp(){const t={};Object.entries(this.validators).forEach((([e,o])=>{o instanceof RegExp&&(t[e]=t=>o.test(t))})),this.mounter[this.group]=t}addRule(t,e,o){return this.mounter[t][e]=t=>o.test(t),this}}}},e={},function o(r){var i=e[r];if(void 0!==i)return i.exports;var n=e[r]={exports:{}};return t[r](n,n.exports,o),n.exports}(568);var t,e}));